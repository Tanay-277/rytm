generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  provider  Provider
  username  String?   @unique
  name      String    @default("")
  cover     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  UpVotes   UpVotes[]
  Stream    Stream[]
  accounts  Account[]
  sessions  Session[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Stream {
  id          String     @id @default(uuid())
  title       String
  thumbnail   String
  cover       String
  type        StreamType
  url         String
  extractedId String
  active      Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  UpVotes     UpVotes[]
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
}

model UpVotes {
  id       String @id @default(uuid())
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  stream   Stream @relation(fields: [streamId], references: [id])
  streamId String

  @@unique([userId, streamId])
}

enum StreamType {
  Spotify
  Youtube
  Youtube_Music
}

enum Role {
  Streamer
  Listener
}

enum Provider {
  GOOGLE
}
